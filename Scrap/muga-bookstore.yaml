openapi: 3.0.0
info:
  title: MUGA Bookstore
  description: ""
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    AddCustomerDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
        - username
        - password
        - firstName
        - lastName
    CustomerLoginDTO:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    CustomerLoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
          enum:
            - bearer
        expiresIn:
          type: number
        scope:
          type: string
      required:
        - accessToken
        - tokenType
        - expiresIn
        - scope
    UpdateShoppingCartDTO:
      type: object
      properties:
        shoppingCart:
          description: List of book ids
          type: array
          items:
            type: string
      required:
        - shoppingCart
    Book:
      type: object
      properties:
        bid:
          type: string
        title:
          type: string
        price:
          type: number
        rating:
          type: number
        ratingCount:
          type: number
        reviewCount:
          type: number
        pages:
          type: number
        description:
          type: string
        publisher:
          type: string
        publicationDate:
          format: date-time
          type: string
        category:
          type: string
          enum:
            - SCIENCE
            - FICTION
            - ENGINEERING
      required:
        - bid
        - title
        - price
        - rating
        - ratingCount
        - reviewCount
        - pages
        - description
        - publisher
        - publicationDate
        - category
    AddBookReviewDTO:
      type: object
      properties:
        title:
          type: string
        rating:
          type: number
        content:
          type: string
      required:
        - title
        - rating
        - content
    BookReview:
      type: object
      properties:
        id:
          type: string
        bid:
          type: string
        title:
          type: string
        rating:
          type: number
        authorCustomerId:
          type: string
        content:
          type: string
        publicationDate:
          format: date-time
          type: string
        lastUpdated:
          format: date-time
          type: string
      required:
        - id
        - bid
        - title
        - rating
        - authorCustomerId
        - content
        - publicationDate
        - lastUpdated
    UpdateBookReviewDTO:
      type: object
      properties:
        title:
          type: string
        rating:
          type: number
        content:
          type: string
      required:
        - title
        - rating
        - content
    Address:
      type: object
      properties:
        id:
          type: string
        street:
          type: string
        province:
          type: string
        country:
          type: string
        zip:
          type: string
        phone:
          type: string
      required:
        - id
        - street
        - province
        - country
        - zip
    AddOrderDTO:
      type: object
      properties:
        bids:
          description: List of book identifiers
          type: array
          items:
            type: string
        shippingAddress:
          $ref: "#/components/schemas/Address"
        billingAddress:
          $ref: "#/components/schemas/Address"
      required:
        - bids
        - shippingAddress
        - billingAddress
    Order:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: string
        status:
          type: string
          enum:
            - ORDERED
            - PROCESSED
            - DENIED
        shippingAddress:
          $ref: "#/components/schemas/Address"
        billingAddress:
          $ref: "#/components/schemas/Address"
        date:
          format: date-time
          type: string
      required:
        - id
        - customerId
        - status
        - shippingAddress
        - billingAddress
        - date
    OrderItem:
      type: object
      properties:
        orderId:
          type: string
        bookId:
          type: string
        price:
          type: number
      required:
        - orderId
        - bookId
        - price
paths:
  /api/v1/customers:
    post:
      operationId: addCustomer
      summary: Add Customer
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddCustomerDTO"
      responses:
        "201":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      tags:
        - customers
  "/api/v1/customers/{username}/login":
    post:
      operationId: customerLogin
      summary: Login
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerLoginDTO"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerLoginResponse"
      tags:
        - customers
  "/api/v1/customers/{username}/logout":
    delete:
      operationId: customerLogout
      summary: Logout
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          description: ""
      security:
        - bearer: []
      tags:
        - customers
  "/api/v1/customers/{username}/shopping-cart":
    patch:
      operationId: updateShoppingCart
      summary: Update Shopping Cart
      parameters:
        - name: username
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateShoppingCartDTO"
      responses:
        "204":
          description: ""
        "401":
          description: ""
        "403":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - customers
  /api/v1/books:
    get:
      operationId: listBooks
      summary: List Books
      description: List the books from this bookstore
      parameters:
        - name: offset
          required: false
          in: query
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: order-by
          required: false
          in: query
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: sort-by
          required: false
          in: query
          schema:
            enum:
              - title
              - price
              - publicationDate
            type: string
        - name: "price[lte]"
          required: false
          in: query
          schema:
            type: number
        - name: "price[gte]"
          required: false
          in: query
          schema:
            type: number
        - name: category
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
      tags:
        - books
  "/api/v1/books/{bookId}":
    get:
      operationId: getBook
      summary: Get Book
      parameters:
        - name: bookId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: ""
        "500":
          description: ""
      tags:
        - books
  "/api/v1/books/{bookId}/reviews":
    post:
      operationId: addBookReview
      summary: Add Book Review
      parameters:
        - name: bookId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddBookReviewDTO"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookReview"
        "401":
          description: ""
        "409":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - book-reviews
    get:
      operationId: listBookReviews
      summary: List Book Reviews
      parameters:
        - name: offset
          required: false
          in: query
          schema:
            type: number
        - name: limit
          required: false
          in: query
          schema:
            type: number
        - name: order-by
          required: false
          in: query
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: sort-by
          required: false
          in: query
          schema:
            enum:
              - rating
              - publicationDate
            type: string
        - name: "rating[lte]"
          required: false
          in: query
          schema:
            type: number
        - name: "rating[gte]"
          required: false
          in: query
          schema:
            type: number
        - name: category
          required: false
          in: query
          schema:
            type: string
        - name: bookId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookReview"
        "500":
          description: ""
      tags:
        - book-reviews
  "/api/v1/books/{bookId}/reviews/{id}":
    get:
      operationId: getBookReview
      summary: Get Book Review
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: bookId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookReview"
        "404":
          description: ""
        "500":
          description: ""
      tags:
        - book-reviews
    put:
      operationId: updateBookReview
      summary: Update Book Review
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: bookId
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBookReviewDTO"
      responses:
        "204":
          description: ""
        "401":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - book-reviews
    delete:
      operationId: deleteBookReview
      summary: Delete Book Review
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: bookId
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - book-reviews
  /api/v1/orders:
    post:
      operationId: addOrder
      summary: Add Order
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddOrderDTO"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "401":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - order
    get:
      operationId: listOrders
      summary: List Orders
      parameters:
        - name: order-by
          required: false
          in: query
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: status
          required: false
          in: query
          schema:
            enum:
              - ORDERED
              - PROCESSED
              - DENIED
            type: string
        - name: is-after
          required: false
          in: query
          description: YYYY-MM-DD
          schema:
            type: string
        - name: is-before
          required: false
          in: query
          description: YYYY-MM-DD
          schema:
            type: string
        - name: sort-by
          required: false
          in: query
          schema:
            enum:
              - date
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "401":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - order
  "/api/v1/orders/{orderId}":
    get:
      operationId: getOrder
      summary: Get Order
      parameters:
        - name: orderId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
        "401":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - order
  "/api/v1/orders/{orderId}/cancel":
    patch:
      operationId: cancelOrder
      summary: Cancel Order
      parameters:
        - name: orderId
          required: true
          in: path
          schema:
            type: string
      responses:
        "204":
          description: ""
        "401":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - order
  "/api/v1/orders/{orderId}/items":
    get:
      operationId: listOrderItems
      summary: List Order Items
      parameters:
        - name: order-by
          required: false
          in: query
          schema:
            enum:
              - asc
              - desc
            type: string
        - name: sort-by
          required: false
          in: query
          schema:
            enum:
              - price
            type: string
        - name: orderId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
        "401":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - order-items
  "/api/v1/orders/{orderId}/items/{bookId}":
    get:
      operationId: getOrderItem
      summary: Get Order Item
      parameters:
        - name: bookId
          required: true
          in: path
          schema:
            type: string
        - name: orderId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
        "401":
          description: ""
        "403":
          description: ""
        "404":
          description: ""
        "500":
          description: ""
      security:
        - bearer: []
      tags:
        - order-items
